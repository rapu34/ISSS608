---
title: "Take-home Exercise 1"
author: "Jeounghyun Kim"
date: "February 1, 2025"
date-modified: "last-modified"
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
---

# **Take-home Exercise 1**

## **1 Overview**

### **1.1 Introduction**

According to the World Health Organization (WHO), cardiovascular diseases (CVDs) are the leading cause of death globally, accounting for approximately 17.9 million deaths per year. Among CVDs, heart attacks are one of the most critical and life-threatening conditions, making early prevention and risk factor analysis essential.

This dataset provides an in-depth analysis of heart attack incidents in Japan, with a focus on the differences between youth and adult populations. It includes various medical indicators (cholesterol levels, blood pressure, maximum heart rate), lifestyle factors (exercise, diet), and demographic information, offering valuable insights into age-specific cardiovascular risks. By analyzing this dataset, researchers, healthcare professionals, and policymakers can gain a deeper understanding of these risks and develop more effective prevention strategies.

This dataset serves as a valuable resource for comparison with global cardiovascular research efforts, such as WHO's 'Global Hearts' initiative and the CDC's 'Million Hearts' program. Additionally, it supports statistical modeling, trend visualization, and predictive analytics, contributing to the development of data-driven public health policies and early intervention programs aimed at reducing the prevalence of cardiovascular diseases.

## 

## **1.2 The Data**

The data for this analysis comes from the **Heart Attack in Japan: Youth vs. Adult** dataset, retrieved from the [Kaggle database](https://www.kaggle.com/datasets/ashaychoudhary/heart-attack-in-japan-youth-vs-adult/data). The dataset provides detailed information on heart attack incidents among youth and adults, focusing on medical indicators, lifestyle factors, and demographic characteristics.

### **Dataset Components**

The dataset includes various features, such as:

-   **Demographic Information:** Age, gender, and residential region (Urban/Rural).

-   **Medical History:** Presence of pre-existing conditions such as **diabetes** and **hypertension**.

-   **Lifestyle Factors:**

    -   **Smoking History** and **Alcohol Consumption** levels.

    -   **Physical Activity** categorized as High, Moderate, or Low.

    -   **Diet Quality** classified as Good, Average, or Poor.

-   **Medical Indicators:**

    -   **Cholesterol Levels** (numerical values).

    -   **Resting Blood Pressure** *(if available in the full dataset)*.

-   **Additional Data Fields:** The dataset contains extra computed columns that may require further preprocessing for analysis.

This dataset serves as a valuable resource for data analysts, healthcare professionals, and policymakers aiming to understand and mitigate cardiovascular risks in Japan. Proper data preprocessing and ethical considerations are recommended before conducting any analysis.

Getting started,

```{r}
pacman::p_load(ggiraph, plotly, 
               patchwork, DT, tidyverse,corrplot,reshape2,ggpairs)
```

## **1.2 Import**

```{r}
df <- read_csv("japan_heart_attack_dataset.csv")
```

```{r}
glimpse(df)
```

```{r}
summary(df)
```

```{r}
df <- df %>%
  mutate(
    # Yes/No 범주형 변수 → 0/1 변환
    smoking_history = ifelse(Smoking_History == "Yes", 1, 0),
    diabetes_history = ifelse(Diabetes_History == "Yes", 1, 0),
    hypertension_history = ifelse(Hypertension_History == "Yes", 1, 0),
    
    # 성별 변환 (Male → 1, Female → 0)
    gender = ifelse(Gender == "Male", 1, 0),

    # 심장마비 여부 변환 (Yes → 1, No → 0)
    heart_attack_occurrence = ifelse(Heart_Attack_Occurrence == "Yes", 1, 0)
  )
```

```{r}
colnames(df)  # 컬럼명 출력

```

```{r}
df <- df %>%
  select(-starts_with("Extra_Column"))
```

```         
```

```{r}
df <- df %>%
  select(-Smoking_History, -Diabetes_History, -Hypertension_History, -Gender, -Heart_Attack_Occurrence)

```

```{r}
#| label: setup
#| include: false

# 필요한 패키지 로드
pacman::p_load(ggiraph, plotly, 
               patchwork, DT, tidyverse, corrplot, reshape2)

# 데이터 불러오기
df <- read_csv("japan_heart_attack_dataset.csv")

# . Yes/No 범주형 변수 → 0/1 변환
df <- df %>%
  mutate(
    smoking_history = ifelse(Smoking_History == "Yes", 1, 0),
    diabetes_history = ifelse(Diabetes_History == "Yes", 1, 0),
    hypertension_history = ifelse(Hypertension_History == "Yes", 1, 0),
    gender = ifelse(Gender == "Male", 1, 0),
    heart_attack_occurrence = ifelse(Heart_Attack_Occurrence == "Yes", 1, 0)
  )

# 2. 불필요한 컬럼 삭제
df <- df %>%
  select(-starts_with("Extra_Column"), 
         -Smoking_History, -Diabetes_History, -Hypertension_History, 
         -Gender, -Heart_Attack_Occurrence)

# 3. 연속형 변수만 선택
numeric_cols <- df %>% select(where(is.numeric))

# 4. 변동이 없는 컬럼(표준편차 0) 제거
zero_sd_cols <- numeric_cols %>% 
  summarise(across(everything(), sd, na.rm = TRUE)) %>%
  select(where(~ . == 0)) %>% colnames()
numeric_cols <- numeric_cols %>% select(-all_of(zero_sd_cols))

# 5. 상관행렬 생성
cor_matrix <- cor(numeric_cols, use = "complete.obs")

# 6. 상관행렬이 제대로 생성되었는지 확인
print(dim(cor_matrix))  # 정상적으로 (n, n) 크기가 나와야 함

```

```{r}
#| fig-width: 15 
#| fig-height: 10

corrplot(cor_matrix, method = "circle", type = "lower",
         col = colorRampPalette(c("blue", "white", "red"))(200),
         tl.col = "black", tl.srt = 45, 
         addCoef.col = "black", 
         number.cex = 0.8, 
         title = "Correlation Heatmap (corrplot)")

```

```{r}
#| fig-width: 15 
#| fig-height: 10

ggplot(df, aes(x = Cholesterol_Level)) +
  geom_histogram(fill = "blue", bins = 30, alpha = 0.7) +
  labs(title = "Cholesterol Level Distribution", x = "Cholesterol Level", y = "Count")

```

```{r}
ggplot(df, aes(x = as.factor(heart_attack_occurrence), y = Cholesterol_Level, fill = as.factor(heart_attack_occurrence))) +
  geom_boxplot() +
  labs(title = "Cholesterol Level by Heart Attack Occurrence", x = "Heart Attack (0 = No, 1 = Yes)", y = "Cholesterol Level") +
  scale_fill_manual(values = c("red", "blue"))

```

```{r}
ggplot(df, aes(x = as.factor(smoking_history), fill = as.factor(heart_attack_occurrence))) +
  geom_bar(position = "fill") +
  labs(title = "Heart Attack Occurrence by Smoking History", x = "Smoking History (0 = No, 1 = Yes)", y = "Proportion") +
  scale_fill_manual(values = c("red", "blue"), name = "Heart Attack")

```

```{r}
ggplot(df, aes(x = Systolic_BP, y = Heart_Rate, color = as.factor(heart_attack_occurrence))) +
  geom_point(alpha = 0.6) +
  labs(title = "Heart Rate vs. Systolic BP (by Heart Attack Occurrence)", x = "Systolic BP", y = "Heart Rate") +
  scale_color_manual(values = c("red", "blue"), name = "Heart Attack")

```

```{r}
# 필요한 패키지 로드
library(tidyverse)

# 데이터 로드
df <- read.csv("japan_heart_attack_dataset.csv")

# 불필요한 컬럼 제거
df <- df %>%
  select(-starts_with("Extra_Column"))

# 변수명 변경 (snake_case 사용)
df <- df %>%
  rename(
    heart_attack = Heart_Attack_Occurrence,
    bp_systolic = Systolic_BP,
    bp_diastolic = Diastolic_BP
  )

# 연령대 변수 생성 (Youth: 18-35, Adult: 36-79)
df <- df %>%
  mutate(
    age_group = ifelse(Age <= 35, "Youth", "Adult"),
    bmi_category = case_when(
      BMI < 18.5 ~ "Underweight",
      BMI < 25 ~ "Normal",
      BMI < 30 ~ "Overweight",
      TRUE ~ "Obese"
    )
  )

```

```{r}

```

```{r}
#이거 사용가능할듯 BMI 지수가 높은 비만 비율에서 하트어택이 많이 나타난거니까.
# ->콜레스트롤이랑 같이확인
ggplot(df, aes(x = bmi_category, y = BMI, fill = heart_attack)) +
  geom_boxplot() +
  scale_fill_manual(values = c("No" = "blue", "Yes" = "red")) +
  labs(title = "BMI Distribution by Heart Attack Occurrence",
       x = "BMI Category",
       y = "BMI") +
  theme_minimal()

```

```{r}
# BMI 기준으로 비만 여부 컬럼 생성
df <- df %>%
  mutate(BMI_Category = case_when(
    BMI >= 30 ~ "Obese",
    BMI >= 25 & BMI < 30 ~ "Overweight",
    BMI >= 18.5 & BMI < 25 ~ "Normal",
    BMI < 18.5 ~ "Underweight"
  ))

# BMI 그룹별 심장마비 발생률 계산
bmi_heart_attack_rate <- df %>%
  group_by(BMI_Category) %>%
  summarise(heart_attack_rate = mean(heart_attack, na.rm = TRUE) * 100)

# 시각화
ggplot(bmi_heart_attack_rate, aes(x = BMI_Category, y = heart_attack_rate, fill = BMI_Category)) +
  geom_bar(stat = "identity") +
  labs(title = "Heart Attack Occurrence Rate by BMI Category",
       x = "BMI Category",
       y = "Heart Attack Occurrence (%)") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"),
    legend.position = "none"
  )

```

```{r}
ggplot(df, aes(x = Cholesterol_Level, fill = heart_attack)) +
  geom_density(alpha = 0.5) +
  scale_fill_manual(values = c("No" = "green", "Yes" = "red")) +
  labs(title = "Cholesterol Level Distribution by Heart Attack Occurrence",
       x = "Cholesterol Level",
       y = "Density") +
  theme_minimal()

```

```         
```

```{r}
ggplot(df, aes(x = Smoking_History, fill = heart_attack)) +
  geom_bar(position = "fill") +
  scale_fill_manual(values = c("No" = "gray", "Yes" = "red")) +
  labs(title = "Heart Attack Occurrence by Smoking History",
       x = "Smoking History",
       y = "Proportion") +
  theme_minimal()

```

```{r}
ggplot(df, aes(x = heart_attack, y = bp_systolic, fill = heart_attack)) +
  geom_boxplot() +
  scale_fill_manual(values = c("No" = "blue", "Yes" = "red")) +
  labs(title = "Systolic Blood Pressure by Heart Attack Occurrence",
       x = "Heart Attack Occurrence",
       y = "Systolic BP") +
  theme_minimal()

```

```{r}
library(ggridges)


```

```{r}
ggplot(df, aes(x = Cholesterol_Level, y = age_group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability", direction = -1) +
  labs(title = "Cholesterol Level Distribution by Age Group",
       x = "Cholesterol Level") +
  theme_minimal()

```

```{r}
ggplot(df, aes(x = bp_systolic, y = heart_attack, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability", direction = -1) +
  labs(title = "Systolic BP Distribution by Heart Attack Occurrence",
       x = "Systolic Blood Pressure") +
  theme_minimal()

```

```{r}
ggplot(df, aes(x = BMI, y = Smoking_History, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability", direction = -1) +
  labs(title = "BMI Distribution by Smoking History",
       x = "BMI") +
  theme_minimal()

```

```{r}
# 필요한 패키지 로드
library(ggplot2)
library(ggridges)
library(patchwork)

# Ridge Plot 1: Age Group별 Cholesterol Level 분포
ridgeplot_chol <- ggplot(df, aes(x = Cholesterol_Level, y = age_group, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability", direction = -1) +
  labs(title = "Cholesterol Level Distribution by Age Group",
       x = "Cholesterol Level") +
  theme_minimal()

# Ridge Plot 2: 흡연 여부별 BMI 분포
ridgeplot_bmi <- ggplot(df, aes(x = BMI, y = Smoking_History, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability", direction = -1) +
  labs(title = "BMI Distribution by Smoking History",
       x = "BMI") +
  theme_minimal()

# Ridge Plot 3: 심장마비 여부에 따른 수축기 혈압 분포
ridgeplot_bp <- ggplot(df, aes(x = bp_systolic, y = heart_attack, fill = 0.5 - abs(0.5 - stat(ecdf)))) +
  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability", direction = -1) +
  labs(title = "Systolic BP Distribution by Heart Attack Occurrence",
       x = "Systolic Blood Pressure") +
  theme_minimal()

# 여러 개의 Ridge Plot을 한 화면에 배치
(ridgeplot_chol / ridgeplot_bmi) | ridgeplot_bp

```

```{r}
# 필요한 패키지 로드
library(ggplot2)
library(ggridges)
library(dplyr)

# 데이터 전처리: 소문자로 저장된 `heart_attack` 변수를 사용
df <- df %>%
  mutate(heart_attack = factor(heart_attack, levels = c("No", "Yes")))

# Ridge Plot: 심장마비 여부(Yes/No)별 콜레스테롤 수치 분포
ggplot(df, aes(x = Cholesterol_Level, y = heart_attack, fill = after_stat(ecdf))) +
  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
  scale_fill_viridis_c(name = "Tail probability", direction = -1) +
  labs(title = "Cholesterol Level Distribution by Heart Attack Occurrence",
       x = "Cholesterol Level",
       y = "Heart Attack") +
  theme_minimal()


```

```{r}
# 데이터 로드
df <- read.csv("japan_heart_attack_dataset.csv")
df <- df %>%
  mutate(heart_attack = case_when(
    Heart_Attack_Occurrence == "Yes" ~ 1,
    Heart_Attack_Occurrence == "No" ~ 0,
    TRUE ~ NA_real_
  ))

```

```{r}
table(df$heart_attack, useNA = "ifany")  # 변환된 값 개수 확인

```

```{r}
#1번으로갑니다!

# 필요한 패키지 로드
library(ggplot2)
library(dplyr)


# 연령별 심장마비 발생률 계산
age_heart_attack_rate <- df %>%
  group_by(Age) %>%
  summarise(heart_attack_rate = mean(heart_attack) * 100)

# 시각화 (ggplot2)
ggplot(age_heart_attack_rate, aes(x = Age, y = heart_attack_rate)) +
  geom_line(color = "red", size = 1) +  # 선 그래프
  geom_point(color = "red", size = 2) +  # 점 추가
  labs(title = "Heart Attack Occurrence Rate by Age",
       x = "Age",
       y = "Heart Attack Occurrence (%)") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"),
    panel.grid.major = element_line(color = "gray", linetype = "dashed")
  )

```

```{r}
df <- df %>%
  mutate(Age_Group_10s = cut(Age, breaks = seq(10, 80, by = 10), 
                             labels = c("10s", "20s", "30s", "40s", "50s", "60s", "70s"), 
                             right = FALSE))

age_group_heart_attack_rate <- df %>%
  group_by(Age_Group_10s) %>%
  summarise(heart_attack_rate = mean(heart_attack, na.rm = TRUE) * 100)

# 확인
print(age_group_heart_attack_rate)

```

```{r}
ggplot(age_group_heart_attack_rate, aes(x = Age_Group_10s, y = heart_attack_rate, group = 1)) +
  geom_line(color = "blue", size = 1.2) +
  geom_point(color = "blue", size = 3) +
  labs(title = "Heart Attack Occurrence Rate by 10-Year Age Group",
       x = "Age Group",
       y = "Heart Attack Occurrence (%)") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"),
    panel.grid.major = element_line(color = "gray", linetype = "dashed")
  )


```

바이올린인가 콜레스트롤 찍어보기. 거기서 찍어보고 위험군 나눠서 하트어택이랑 연관성 확인할것.

```{r}
#처음 전처리한 데이터사용
# 필요한 패키지 로드
library(tidyverse)

# 콜레스테롤을 5개 그룹으로 나누기 (Very Low ~ Very High)
df <- df %>%
  mutate(Cholesterol_Category = cut(Cholesterol_Level, 
                                    breaks = quantile(Cholesterol_Level, probs = seq(0, 1, 0.2), na.rm = TRUE), 
                                    include.lowest = TRUE,
                                    labels = c("Very Low", "Low", "Normal", "High", "Very High")))

# 콜레스테롤 그룹별 심장마비 발생률 계산
cholesterol_heart_attack_rate <- df %>%
  group_by(Cholesterol_Category) %>%
  summarise(heart_attack_rate = mean(heart_attack_occurrence, na.rm = TRUE) * 100)

# 결과 확인
print(cholesterol_heart_attack_rate)

```

```{r}
# 필요한 패키지 로드
library(tidyverse)

# 콜레스테롤을 5개 그룹으로 나누기 (Very Low ~ Very High)
df <- df %>%
  mutate(Cholesterol_Category = cut(Cholesterol_Level, 
                                    breaks = quantile(Cholesterol_Level, probs = seq(0, 1, 0.2), na.rm = TRUE), 
                                    include.lowest = TRUE,
                                    labels = c("Very Low", "Low", "Normal", "High", "Very High")))

# 콜레스테롤 그룹별 심장마비 발생 건수 계산
cholesterol_heart_attack_count <- df %>%
  group_by(Cholesterol_Category, heart_attack_occurrence) %>%
  summarise(count = n(), .groups = "drop") %>%
  pivot_wider(names_from = heart_attack_occurrence, values_from = count, values_fill = 0) %>%
  rename(No_Heart_Attack = `0`, Heart_Attack = `1`)

# 결과 확인
print(cholesterol_heart_attack_count)

```

```{r}
ggplot(cholesterol_heart_attack_rate, aes(x = Cholesterol_Category, y = heart_attack_rate, fill = Cholesterol_Category)) +
  geom_bar(stat = "identity") +
  labs(title = "Heart Attack Occurrence Rate by Cholesterol Level",
       x = "Cholesterol Category",
       y = "Heart Attack Occurrence (%)") +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 12, face = "bold"),
    legend.position = "none"
  )

```

```{r}
# 필요한 패키지 로드
library(tidyverse)

# 의학적 기준 (WHO/AHA)으로 콜레스테롤을 5개 그룹으로 나누기
df <- df %>%
  mutate(Cholesterol_Category = cut(Cholesterol_Level, 
                                    breaks = c(-Inf, 130, 160, 190, 220, Inf), 
                                    include.lowest = TRUE,
                                    labels = c("Very Low", "Low", "Normal", "High", "Very High")))

# 콜레스테롤 그룹별 심장마비 발생 건수 계산
cholesterol_heart_attack_count <- df %>%
  group_by(Cholesterol_Category, heart_attack_occurrence) %>%
  summarise(count = n(), .groups = "drop") %>%
  pivot_wider(names_from = heart_attack_occurrence, values_from = count, values_fill = 0) %>%
  rename(No_Heart_Attack = `0`, Heart_Attack = `1`)

# 결과 확인
print(cholesterol_heart_attack_count)

```

```{r}
ggplot(cholesterol_heart_attack_count, aes(x = Cholesterol_Category)) +
  geom_bar(aes(y = No_Heart_Attack, fill = "No Heart Attack"), stat = "identity") +
  geom_bar(aes(y = Heart_Attack, fill = "Heart Attack"), stat = "identity", position = "stack") +
  labs(title = "Heart Attack Occurrence by Cholesterol Category (WHO/AHA Standard)",
       x = "Cholesterol Category", y = "Count") +
  scale_fill_manual(values = c("blue", "red")) +
  theme_minimal()


```

```{r}
# 콜레스테롤 그룹별 심장마비 발생 비율 계산
cholesterol_heart_attack_rate <- df %>%
  group_by(Cholesterol_Category) %>%
  summarise(
    Heart_Attack_Count = sum(heart_attack_occurrence, na.rm = TRUE),
    Total_Count = n(),
    Heart_Attack_Rate = (Heart_Attack_Count / Total_Count) * 100
  )

# 비율 기반 시각화
ggplot(cholesterol_heart_attack_rate, aes(x = Cholesterol_Category, y = Heart_Attack_Rate, fill = Cholesterol_Category)) +
  geom_bar(stat = "identity") +
  labs(title = "Heart Attack Percentage by Cholesterol Category",
       x = "Cholesterol Category", y = "Heart Attack Rate (%)") +
  theme_minimal() +
  scale_fill_brewer(palette = "Reds")

```

```{r}
tbl <- table(df$Cholesterol_Category, df$heart_attack_occurrence)
chisq.test(tbl)

```

```{r}
model <- glm(heart_attack_occurrence ~ Cholesterol_Level, data = df, family = binomial)
summary(model)
```

```{r}
library(ggplot2)
library(dplyr)

# 성별별 심장마비 발생률 계산
gender_heart_attack <- df %>%
  group_by(Gender, heart_attack_occurrence) %>%
  summarise(count = n(), .groups = "drop")

# 시각화
ggplot(gender_heart_attack, aes(x = Gender, y = count, fill = as.factor(heart_attack_occurrence))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Heart Attack Occurrence by Gender",
       x = "Gender", y = "Count", fill = "Heart Attack") +
  scale_fill_manual(values = c("blue", "red"), labels = c("No", "Yes")) +
  theme_minimal()

```

```{r}
# 지역별 심장마비 발생률 계산
region_heart_attack <- df %>%
  group_by(Region, heart_attack_occurrence) %>%
  summarise(count = n(), .groups = "drop")

# 시각화
ggplot(region_heart_attack, aes(x = Region, y = count, fill = as.factor(heart_attack_occurrence))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Heart Attack Occurrence by Region",
       x = "Region (Urban/Rural)", y = "Count", fill = "Heart Attack") +
  scale_fill_manual(values = c("blue", "red"), labels = c("No", "Yes")) +
  theme_minimal()

```

```{r}
library(ggplot2)
library(dplyr)

# 전체 지역별 인원수 기준으로 심장마비 발생 비율 계산
region_heart_attack_rate <- df %>%
  group_by(Region, heart_attack_occurrence) %>%
  summarise(count = n(), .groups = "drop") %>%
  group_by(Region) %>%
  mutate(percentage = count / sum(count) * 100)

# 결과 확인
print(region_heart_attack_rate)

```

```{r}
ggplot(region_heart_attack_rate, aes(x = Region, y = percentage, fill = as.factor(heart_attack_occurrence))) +
  geom_bar(stat = "identity", position = "stack") +
  labs(title = "Heart Attack Percentage by Region",
       x = "Region (Urban/Rural)", y = "Heart Attack Rate (%)", fill = "Heart Attack") +
  scale_fill_manual(values = c("blue", "red"), labels = c("No", "Yes")) +
  theme_minimal()

```
