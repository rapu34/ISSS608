{
  "hash": "297fa53c533b107896b148676206cbce",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on_Ex08\"\nauthor: \"Jeounghyun Kim\"\ndate-modified: \"last-modified\" \nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# **12  Funnel Plots for Fair Comparisons**\n\n## **12.1 Overview**\n\nA **funnel plot** is a specialised data visualisation tool for unbiased comparisons between outlets, stores, or business entities. In this exercise, you will learn to:\n\n1.  Plot funnel plots using the **funnelPlotR** package.\n\n2.  Create static funnel plots using the **ggplot2** package.\n\n3.  Generate interactive funnel plots using **plotly R** and **ggplot2**.\n\n## **12.2 Installing and Launching R Packages**\n\nIn this exercise, four R packages will be used. They are:\n\n-   **readr** for importing csv into R.\n\n-   **FunnelPlotR** for creating funnel plot.\n\n-   **ggplot2** for creating funnel plot manually.\n\n-   **knitr** for building static html table.\n\n-   **plotly** for creating interactive funnel plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n```\n:::\n\n\n\n## **12.3 Importing Data**\n\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from [Open Data Covid-19 Provinsi DKI Jakarta portal](https://riwayat-file-covid-19-dki-jakarta-jakartagis.hub.arcgis.com/). For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyverse)\n\ncovid19 <- read_csv(\"/Users/jay/ISSS608-VAA/Hands-on_Ex/Hands_on_Ex08/data/COVID-19_DKI_Jakarta.csv\") %>%\n  mutate_if(is.character, as.factor)\n```\n:::\n\n\n\n## **12.4 FunnelPlotR methods**\n\n[**FunnelPlotR**](https://nhs-r-community.github.io/FunnelPlotR/) package uses ggplot to generate funnel plots. It requires a `numerator` (events of interest), `denominator` (population to be considered) and `group`. The key arguments selected for customisation are:\n\n-   `limit`: plot limits (95 or 99).\n\n-   `label_outliers`: to label outliers (true or false).\n\n-   `Poisson_limits`: to add Poisson limits to the plot.\n\n-   `OD_adjust`: to add overdispersed limits to the plot.\n\n-   `xrange` and `yrange`: to specify the range to display for axes, acts like a zoom function.\n\n-   Other aesthetic components such as graph title, axis labels etc.\n\n### **12.4.1 FunnelPlotR methods: The basic plot**\n\nBefore proceeding with 12.4.1 FunnelPlotR methods: The basic plot, you need to first install and load the FunnelPlotR package by running the following commands:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"FunnelPlotR\")\nlibrary(FunnelPlotR)\n```\n:::\n\n\n\n::: panel-tabset\n## The Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex08_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n```\n\n\n:::\n:::\n\n\n\n## The code chunk\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n```\n:::\n\n\n:::\n\n-   **`group`**\n\n    -   In this function, `group` specifies the level of the points to be plotted (e.g., Sub-district, District, or City).\n\n    -   If `City` is selected, only six data points will be plotted.\n\n-   **`data_type`**\n\n    -   The default value for the `data_type` argument is `\"SR\"`.\n\n-   **`limit`**\n\n    -   Specifies the plot limits.\n\n    -   Accepted values are `95` (for 95% quantiles) or `99` (for 99.8% quantiles of the distribution).\n\n### **12.4.2 FunnelPlotR methods: Makeover 1**\n\n::: panel-tabset\n## The Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex08_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n```\n\n\n:::\n:::\n\n\n\n## The code chunk\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #<<\n  xrange = c(0, 6500),  #<<\n  yrange = c(0, 0.05)   #<<\n)\n```\n:::\n\n\n:::\n\n```         \nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n```\n\nThings to learn from the code chunk above.\n\n-   `label = NA` argument is to removed the default label outliers feature.\n\n-   `title` argument is used to add plot title.\n\n-   `x_label` and `y_label` arguments are used to add/edit x-axis and y-axis titles.\n",
    "supporting": [
      "Hands-on_Ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}